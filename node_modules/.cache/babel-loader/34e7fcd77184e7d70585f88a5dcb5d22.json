{"ast":null,"code":"var _jsxFileName = \"/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/components/appComponent.js\";\nimport React from \"react\";\nimport { withApollo } from \"@apollo/react-hoc\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./../assets/scss/style.scss\";\nimport { ALL_CHARACTERS, FIND_CHARACTER_BY_ID } from \"../queries\";\nimport ErrorComponent from \"./errorComponent\";\nimport LoadingComponent from \"./loadingComponent\";\nimport CharacterItemComponent from \"./characterItemComponent\";\nimport DetailsComponent from \"./detailsComponent\";\nlet characterSelected = null;\n\nlet getVariables = () => {\n  return {\n    length: 5\n  };\n};\n\nlet AppComponent = () => {\n  const _useQuery = useQuery(ALL_CHARACTERS, {\n    variables: getVariables(),\n    after: \"\"\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data,\n        refetch = _useQuery.refetch;\n\n  if (loading) return React.createElement(LoadingComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  });\n  if (error) return React.createElement(ErrorComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"nav\", {\n    className: \"navbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"navbar-brand\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \" Ravn Star Wars Registry\"))), React.createElement(\"main\", {\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, renderData(data.allPeople.edges)));\n};\n\nlet renderData = data => {\n  let listView = data.map(obj => {\n    return React.createElement(CharacterItemComponent, {\n      node: obj.node,\n      key: obj.node.id,\n      getCharacterById: getCharacterById,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    });\n  });\n  return React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"characters\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, listView)), React.createElement(\"div\", {\n    className: \"col-md-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, characterSelected !== null ? React.createElement(DetailsComponent, {\n    character: characterSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }) : '')));\n};\n\nlet getCharacterById = async (id, client) => {\n  characterSelected = (await client.query({\n    query: FIND_CHARACTER_BY_ID,\n    variables: {\n      id: id\n    }\n  })).data.person;\n};\n/*class AppComponent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.length = 5;\n    this.state = {character: null, characters: [], after: \"\"};\n  }\n\n\n\n\n\n\n\n\n  render() {\n    //this.setState({characters: [...this.state.characters, data.allPeople.edges]});\n    //this.setState({after: data.allPeople.pageInfo.endCursor});\n\n    //if(data.allPeople.pageInfo.hasNextPage) refetch();\n\n    return (\n      <div>\n        <header>\n          <nav className=\"navbar\">\n            <span className=\"navbar-brand\"> Ravn Star Wars Registry</span>\n          </nav>\n        </header>\n        <main className=\"container-fluid\">\n\n        </main>\n      </div>\n    )\n  }\n}*/\n\n\nexport default AppComponent;","map":{"version":3,"sources":["/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/components/appComponent.js"],"names":["React","withApollo","useQuery","ALL_CHARACTERS","FIND_CHARACTER_BY_ID","ErrorComponent","LoadingComponent","CharacterItemComponent","DetailsComponent","characterSelected","getVariables","length","AppComponent","variables","after","loading","error","data","refetch","renderData","allPeople","edges","listView","map","obj","node","id","getCharacterById","client","query","person"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {withApollo} from \"@apollo/react-hoc\";\nimport {useQuery} from \"@apollo/react-hooks\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./../assets/scss/style.scss\";\n\nimport {ALL_CHARACTERS, FIND_CHARACTER_BY_ID} from \"../queries\";\nimport ErrorComponent from \"./errorComponent\";\nimport LoadingComponent from \"./loadingComponent\";\nimport CharacterItemComponent from \"./characterItemComponent\";\nimport DetailsComponent from \"./detailsComponent\";\n\nlet characterSelected = null;\n\nlet getVariables = () => {\n  return {length: 5};\n};\n\nlet AppComponent = () => {\n  const {loading, error, data, refetch} = useQuery(ALL_CHARACTERS, {\n    variables: getVariables(),\n    after: \"\",\n  });\n\n  if (loading) return <LoadingComponent/>;\n  if (error) return <ErrorComponent/>;\n\n  return (\n    <div>\n      <header>\n        <nav className=\"navbar\">\n          <span className=\"navbar-brand\"> Ravn Star Wars Registry</span>\n        </nav>\n      </header>\n      <main className=\"container-fluid\">\n        {renderData(data.allPeople.edges)}\n      </main>\n    </div>\n  )\n};\n\nlet renderData = (data) => {\n  let listView = data.map((obj) => {\n    return <CharacterItemComponent node={obj.node} key={obj.node.id} getCharacterById={getCharacterById}/>\n  });\n  return (<section>\n    <div className=\"row\">\n      <div className=\"col-md-3\">\n        <ul className=\"characters\">\n          {listView}\n        </ul>\n      </div>\n      <div className=\"col-md-9\">\n        {characterSelected !== null ? <DetailsComponent character={characterSelected}/> : ''}\n      </div>\n    </div>\n  </section>);\n};\n\nlet getCharacterById = async (id, client) => {\n  characterSelected = (await client.query({\n    query: FIND_CHARACTER_BY_ID,\n    variables: {id: id},\n  })).data.person;\n};\n\n\n/*class AppComponent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.length = 5;\n    this.state = {character: null, characters: [], after: \"\"};\n  }\n\n\n\n\n\n\n\n\n  render() {\n    //this.setState({characters: [...this.state.characters, data.allPeople.edges]});\n    //this.setState({after: data.allPeople.pageInfo.endCursor});\n\n    //if(data.allPeople.pageInfo.hasNextPage) refetch();\n\n    return (\n      <div>\n        <header>\n          <nav className=\"navbar\">\n            <span className=\"navbar-brand\"> Ravn Star Wars Registry</span>\n          </nav>\n        </header>\n        <main className=\"container-fluid\">\n\n        </main>\n      </div>\n    )\n  }\n}*/\n\nexport default AppComponent;"]},"metadata":{},"sourceType":"module"}