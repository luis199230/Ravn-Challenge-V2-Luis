{"ast":null,"code":"import _slicedToArray from \"/Users/luisbenavides/Sites/listview-master-detail-viewdemo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/components/app.js\";\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./../assets/scss/style.scss\";\nimport { ALL_CHARACTERS } from \"../queries\";\nimport ErrorView from \"../views/errorView\";\nimport LoadingView from \"../views/loadingView\";\nimport CharactersView from \"../views/charactersView\";\nexport default function App() {\n  let _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      characters = _useState2[0],\n      setCharacters = _useState2[1];\n\n  let _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      after = _useState4[0],\n      setAfter = _useState4[1];\n\n  let _useState5 = useState(5),\n      _useState6 = _slicedToArray(_useState5, 1),\n      length = _useState6[0];\n\n  let character = useState(null);\n\n  let _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      hasNext = _useState8[0],\n      setHasNext = _useState8[1];\n\n  const _useQuery = useQuery(ALL_CHARACTERS, {\n    variables: {\n      after: after,\n      length: length\n    },\n    onCompleted: () => {\n      if (hasNext) {\n        console.log(after);\n      }\n    }\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return React.createElement(LoadingView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  });\n  if (error) return React.createElement(ErrorView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  });\n  characters = data.allPeople.edges;\n  after = data.allPeople.pageInfo.endCursor;\n  hasNext = data.allPeople.pageInfo.hasNextPage;\n  return React.createElement(CharactersView, {\n    characters: characters,\n    character: character,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/components/app.js"],"names":["React","useState","useQuery","ALL_CHARACTERS","ErrorView","LoadingView","CharactersView","App","characters","setCharacters","after","setAfter","length","character","hasNext","setHasNext","variables","onCompleted","console","log","loading","error","data","allPeople","edges","pageInfo","endCursor","hasNextPage"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AAEA,OAAO,sCAAP;AACA,OAAO,6BAAP;AAGA,SAAQC,cAAR,QAA6B,YAA7B;AAEA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AAGA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACMN,QAAQ,CAAC,EAAD,CADd;AAAA;AAAA,MACvBO,UADuB;AAAA,MACXC,aADW;;AAAA,mBAEJR,QAAQ,CAAC,EAAD,CAFJ;AAAA;AAAA,MAEvBS,KAFuB;AAAA,MAEhBC,QAFgB;;AAAA,mBAGbV,QAAQ,CAAC,CAAD,CAHK;AAAA;AAAA,MAGvBW,MAHuB;;AAI5B,MAAIC,SAAS,GAAGZ,QAAQ,CAAC,IAAD,CAAxB;;AAJ4B,mBAKAA,QAAQ,CAAC,KAAD,CALR;AAAA;AAAA,MAKvBa,OALuB;AAAA,MAKdC,UALc;;AAAA,oBAOGb,QAAQ,CAACC,cAAD,EAAiB;AACtDa,IAAAA,SAAS,EAAE;AAACN,MAAAA,KAAK,EAAEA,KAAR;AAAeE,MAAAA,MAAM,EAAEA;AAAvB,KAD2C;AACXK,IAAAA,WAAW,EAAE,MAAI;AAC1D,UAAGH,OAAH,EAAW;AACRI,QAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACF;AACF;AALqD,GAAjB,CAPX;AAAA,QAOrBU,OAPqB,aAOrBA,OAPqB;AAAA,QAOZC,KAPY,aAOZA,KAPY;AAAA,QAOLC,IAPK,aAOLA,IAPK;;AAe5B,MAAIF,OAAJ,EAAa,OAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEXb,EAAAA,UAAU,GAAGc,IAAI,CAACC,SAAL,CAAeC,KAA5B;AACAd,EAAAA,KAAK,GAAGY,IAAI,CAACC,SAAL,CAAeE,QAAf,CAAwBC,SAAhC;AACAZ,EAAAA,OAAO,GAAGQ,IAAI,CAACC,SAAL,CAAeE,QAAf,CAAwBE,WAAlC;AAIA,SAAQ,oBAAC,cAAD;AAAgB,IAAA,UAAU,EAAEnB,UAA5B;AAAwC,IAAA,SAAS,EAAEK,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AACD","sourcesContent":["import React, {useState} from \"react\";\nimport {useQuery} from \"@apollo/react-hooks\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./../assets/scss/style.scss\";\n\n\nimport {ALL_CHARACTERS} from \"../queries\";\n\nimport ErrorView from \"../views/errorView\";\nimport LoadingView from \"../views/loadingView\";\nimport CharactersView from \"../views/charactersView\";\n\n\nexport default function App() {\n  let [characters, setCharacters] = useState([]);\n  let [after, setAfter] = useState(\"\");\n  let [length] = useState(5);\n  let character = useState(null);\n  let [hasNext, setHasNext] = useState(false);\n\n  const {loading, error, data} = useQuery(ALL_CHARACTERS, {\n    variables: {after: after, length: length}, onCompleted: ()=>{\n      if(hasNext){\n         console.log(after);\n      }\n    }\n  });\n\n  if (loading) return <LoadingView/>;\n  if (error) return <ErrorView/>;\n\n  characters = data.allPeople.edges;\n  after = data.allPeople.pageInfo.endCursor;\n  hasNext = data.allPeople.pageInfo.hasNextPage;\n\n\n\n  return (<CharactersView characters={characters} character={character}/>);\n}"]},"metadata":{},"sourceType":"module"}