{"ast":null,"code":"var _jsxFileName = \"/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/components/appComponent.js\";\nimport React from \"react\";\nimport { withApollo } from \"@apollo/react-hoc\";\nimport { Query } from 'react-apollo';\nimport { Navbar } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./../assets/scss/style.scss\";\nimport { ALL_CHARACTERS, FIND_CHARACTER_BY_ID } from \"../queries\";\nimport ErrorComponent from \"./errorComponent\";\nimport LoadingComponent from \"./loadingComponent\";\nimport CharacterItemComponent from \"./characterItemComponent\";\n\nclass AppComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getCharacterById = () => {\n      this.props.client.query({\n        query: FIND_CHARACTER_BY_ID,\n        variables: {\n          id: id\n        }\n      });\n    };\n\n    this.length = 5;\n  }\n\n  getVariables() {\n    return {\n      length: this.length\n    };\n  }\n\n  executeQuery({\n    loading,\n    error,\n    data\n  }) {\n    if (loading) return React.createElement(LoadingComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n    if (error) return React.createElement(ErrorComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, data.allPeople.edges.map(obj => {\n      return React.createElement(CharacterItemComponent, {\n        node: obj.node,\n        key: obj.node.id,\n        onClick: this.getCharacterById,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n    })), React.createElement(\"div\", {\n      className: \"col-md-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      className: \"navbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"navbar-brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \" Ravn Star Wars Registry\"))), React.createElement(\"main\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Query, {\n      query: ALL_CHARACTERS,\n      variables: this.getVariables(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.executeQuery)));\n  }\n\n}\n\nexport default withApollo(AppComponent);","map":{"version":3,"sources":["/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/components/appComponent.js"],"names":["React","withApollo","Query","Navbar","ALL_CHARACTERS","FIND_CHARACTER_BY_ID","ErrorComponent","LoadingComponent","CharacterItemComponent","AppComponent","Component","constructor","props","getCharacterById","client","query","variables","id","length","getVariables","executeQuery","loading","error","data","allPeople","edges","map","obj","node","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,SAAQC,KAAR,QAAoB,cAApB;AACA,SAAQC,MAAR,QAAqB,YAArB;AAEA,OAAO,sCAAP;AACA,OAAO,6BAAP;AAEA,SAAQC,cAAR,EAAwBC,oBAAxB,QAAmD,YAAnD;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;;AAEA,MAAMC,YAAN,SAA2BT,KAAK,CAACU,SAAjC,CAA2C;AAEzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,gBATmB,GASA,MAAM;AACvB,WAAKD,KAAL,CAAWE,MAAX,CAAkBC,KAAlB,CAAwB;AACtBA,QAAAA,KAAK,EAAEV,oBADe;AAEtBW,QAAAA,SAAS,EAAE;AAACC,UAAAA,EAAE,EAAEA;AAAL;AAFW,OAAxB;AAID,KAdkB;;AAEjB,SAAKC,MAAL,GAAc,CAAd;AACD;;AAEDC,EAAAA,YAAY,GAAG;AACb,WAAO;AAACD,MAAAA,MAAM,EAAE,KAAKA;AAAd,KAAP;AACD;;AASDE,EAAAA,YAAY,CAAC;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,GAAD,EAAyB;AACnC,QAAIF,OAAJ,EAAa,OAAO,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACb,QAAIC,KAAJ,EAAW,OAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEX,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACN;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,IAAI,CAACC,SAAL,CAAeC,KAAf,CAAqBC,GAArB,CAA0BC,GAAD,IAAS;AACjC,aAAO,oBAAC,sBAAD;AAAwB,QAAA,IAAI,EAAEA,GAAG,CAACC,IAAlC;AAAwC,QAAA,GAAG,EAAED,GAAG,CAACC,IAAJ,CAASX,EAAtD;AACwB,QAAA,OAAO,EAAE,KAAKJ,gBADtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAED,KAHA,CADH,CADF,EAOE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADM,CAAR;AAaD;;AAEDgB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,CADF,CADF,EAME;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEzB,cAAd;AAA8B,MAAA,SAAS,EAAE,KAAKe,YAAL,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,YADR,CADF,CANF,CADF;AAcD;;AApDwC;;AAuD3C,eAAenB,UAAU,CAACQ,YAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport {withApollo} from \"@apollo/react-hoc\";\nimport {Query} from 'react-apollo';\nimport {Navbar} from 'reactstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./../assets/scss/style.scss\";\n\nimport {ALL_CHARACTERS, FIND_CHARACTER_BY_ID} from \"../queries\";\nimport ErrorComponent from \"./errorComponent\";\nimport LoadingComponent from \"./loadingComponent\";\nimport CharacterItemComponent from \"./characterItemComponent\";\n\nclass AppComponent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.length = 5;\n  }\n\n  getVariables() {\n    return {length: this.length};\n  }\n\n  getCharacterById = () => {\n    this.props.client.query({\n      query: FIND_CHARACTER_BY_ID,\n      variables: {id: id},\n    });\n  };\n\n  executeQuery({loading, error, data}) {\n    if (loading) return <LoadingComponent/>;\n    if (error) return <ErrorComponent/>;\n\n    return (<section>\n      <div className=\"row\">\n        <div className=\"col-md-3\">\n          {data.allPeople.edges.map((obj) => {\n            return <CharacterItemComponent node={obj.node} key={obj.node.id}\n                                           onClick={this.getCharacterById}/>\n          })}\n        </div>\n        <div className=\"col-md-9\">\n\n        </div>\n      </div>\n    </section>);\n  }\n\n  render() {\n    return (\n      <div>\n        <header>\n          <Navbar className=\"navbar\">\n            <span className=\"navbar-brand\"> Ravn Star Wars Registry</span>\n          </Navbar>\n        </header>\n        <main className=\"container-fluid\">\n          <Query query={ALL_CHARACTERS} variables={this.getVariables()}>\n            {this.executeQuery}\n          </Query>\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default withApollo(AppComponent);"]},"metadata":{},"sourceType":"module"}