{"ast":null,"code":"import _slicedToArray from \"/Users/luisbenavides/Sites/listview-master-detail-viewdemo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/components/app.js\";\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./../assets/scss/style.scss\";\nimport useIntersect from \"../intersection\";\nimport { ALL_CHARACTERS } from \"../queries\";\nimport ErrorView from \"../views/errorView\";\nimport LoadingView from \"../views/loadingView\";\nimport CharactersView from \"../views/charactersView\";\nexport default function App() {\n  const _useIntersect = useIntersect({\n    threshold: 1\n  }),\n        _useIntersect2 = _slicedToArray(_useIntersect, 2),\n        ref = _useIntersect2[0],\n        entry = _useIntersect2[1];\n\n  const _ref = new Intl.NumberFormat(\"en-US\", {\n    maximumFractionDigits: 2\n  }),\n        format = _ref.format;\n\n  let _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 1),\n      after = _useState2[0];\n\n  let _useState3 = useState(5),\n      _useState4 = _slicedToArray(_useState3, 1),\n      length = _useState4[0];\n\n  let character = useState(null);\n\n  const _useQuery = useQuery(ALL_CHARACTERS, {\n    variables: {\n      after: after,\n      length: length\n    }\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return React.createElement(LoadingView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  });\n  if (error) return React.createElement(ErrorView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n  let characters = data.allPeople.edges;\n  after = data.allPeople.pageInfo.endCursor;\n  return React.createElement(CharactersView, {\n    characters: characters,\n    character: character,\n    ref: ref,\n    ratio: entry.intersectionRatio,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"intersectionRatio: \", format(entry.intersectionRatio));\n}","map":{"version":3,"sources":["/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/components/app.js"],"names":["React","useState","useQuery","useIntersect","ALL_CHARACTERS","ErrorView","LoadingView","CharactersView","App","threshold","ref","entry","Intl","NumberFormat","maximumFractionDigits","format","after","length","character","variables","loading","error","data","characters","allPeople","edges","pageInfo","endCursor","intersectionRatio"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AAEA,OAAO,sCAAP;AACA,OAAO,6BAAP;AAEA,OAAOC,YAAP,MAAyB,iBAAzB;AAEA,SAAQC,cAAR,QAA6B,YAA7B;AAEA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AAGA,eAAe,SAASC,GAAT,GAAe;AAAA,wBACPL,YAAY,CAAC;AAChCM,IAAAA,SAAS,EAAE;AADqB,GAAD,CADL;AAAA;AAAA,QACrBC,GADqB;AAAA,QAChBC,KADgB;;AAAA,eAKT,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAAEC,IAAAA,qBAAqB,EAAE;AAAzB,GAA/B,CALS;AAAA,QAKpBC,MALoB,QAKpBA,MALoB;;AAAA,kBAOdd,QAAQ,CAAC,EAAD,CAPM;AAAA;AAAA,MAOvBe,KAPuB;;AAAA,mBAQbf,QAAQ,CAAC,CAAD,CARK;AAAA;AAAA,MAQvBgB,MARuB;;AAS5B,MAAIC,SAAS,GAAGjB,QAAQ,CAAC,IAAD,CAAxB;;AAT4B,oBAWGC,QAAQ,CAACE,cAAD,EAAiB;AACtDe,IAAAA,SAAS,EAAE;AAACH,MAAAA,KAAK,EAAEA,KAAR;AAAeC,MAAAA,MAAM,EAAEA;AAAvB;AAD2C,GAAjB,CAXX;AAAA,QAWrBG,OAXqB,aAWrBA,OAXqB;AAAA,QAWZC,KAXY,aAWZA,KAXY;AAAA,QAWLC,IAXK,aAWLA,IAXK;;AAe5B,MAAIF,OAAJ,EAAa,OAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEX,MAAIE,UAAU,GAAGD,IAAI,CAACE,SAAL,CAAeC,KAAhC;AACAT,EAAAA,KAAK,GAAGM,IAAI,CAACE,SAAL,CAAeE,QAAf,CAAwBC,SAAhC;AACA,SAAQ,oBAAC,cAAD;AAAgB,IAAA,UAAU,EAAEJ,UAA5B;AAAwC,IAAA,SAAS,EAAEL,SAAnD;AAA8D,IAAA,GAAG,EAAER,GAAnE;AAAwE,IAAA,KAAK,EAAEC,KAAK,CAACiB,iBAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACcb,MAAM,CAACJ,KAAK,CAACiB,iBAAP,CADpB,CAAR;AAGD","sourcesContent":["import React, {useState} from \"react\";\nimport {useQuery} from \"@apollo/react-hooks\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./../assets/scss/style.scss\";\n\nimport useIntersect from \"../intersection\";\n\nimport {ALL_CHARACTERS} from \"../queries\";\n\nimport ErrorView from \"../views/errorView\";\nimport LoadingView from \"../views/loadingView\";\nimport CharactersView from \"../views/charactersView\";\n\n\nexport default function App() {\n  const [ref, entry] = useIntersect({\n    threshold: 1\n  });\n\n  const { format } = new Intl.NumberFormat(\"en-US\", { maximumFractionDigits: 2 });\n\n  let [after] = useState(\"\");\n  let [length] = useState(5);\n  let character = useState(null);\n\n  const {loading, error, data} = useQuery(ALL_CHARACTERS, {\n    variables: {after: after, length: length},\n  });\n\n  if (loading) return <LoadingView/>;\n  if (error) return <ErrorView/>;\n\n  let characters = data.allPeople.edges;\n  after = data.allPeople.pageInfo.endCursor;\n  return (<CharactersView characters={characters} character={character} ref={ref} ratio={entry.intersectionRatio}>\n    intersectionRatio: {format(entry.intersectionRatio)}\n  </CharactersView>);\n}"]},"metadata":{},"sourceType":"module"}