{"ast":null,"code":"import _slicedToArray from \"/Users/luisbenavides/Sites/listview-master-detail-viewdemo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useRef, useState } from \"react\";\nexport default (({\n  root = null,\n  rootMargin,\n  threshold = 0\n}) => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        entry = _useState2[0],\n        updateEntry = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        node = _useState4[0],\n        setNode = _useState4[1];\n\n  const observer = useRef(new window.IntersectionObserver(([entry]) => updateEntry(entry), {\n    root,\n    rootMargin,\n    threshold\n  }));\n  useEffect(() => {\n    const currentObserver = observer.current;\n    currentObserver.disconnect();\n    if (node) currentObserver.observe(node);\n    return () => currentObserver.disconnect();\n  }, [node]);\n  return [setNode, entry];\n});","map":{"version":3,"sources":["/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/intersection.js"],"names":["useEffect","useRef","useState","root","rootMargin","threshold","entry","updateEntry","node","setNode","observer","window","IntersectionObserver","currentObserver","current","disconnect","observe"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,gBAAe,CAAC;AAAEC,EAAAA,IAAI,GAAG,IAAT;AAAeC,EAAAA,UAAf;AAA2BC,EAAAA,SAAS,GAAG;AAAvC,CAAD,KAAgD;AAAA,oBAChCH,QAAQ,CAAC,EAAD,CADwB;AAAA;AAAA,QACtDI,KADsD;AAAA,QAC/CC,WAD+C;;AAAA,qBAErCL,QAAQ,CAAC,IAAD,CAF6B;AAAA;AAAA,QAEtDM,IAFsD;AAAA,QAEhDC,OAFgD;;AAI7D,QAAMC,QAAQ,GAAGT,MAAM,CACrB,IAAIU,MAAM,CAACC,oBAAX,CAAgC,CAAC,CAACN,KAAD,CAAD,KAAaC,WAAW,CAACD,KAAD,CAAxD,EAAiE;AAC/DH,IAAAA,IAD+D;AAE/DC,IAAAA,UAF+D;AAG/DC,IAAAA;AAH+D,GAAjE,CADqB,CAAvB;AAOAL,EAAAA,SAAS,CACP,MAAM;AAAA,UACaa,eADb,GACiCH,QADjC,CACII,OADJ;AAEJD,IAAAA,eAAe,CAACE,UAAhB;AAEA,QAAIP,IAAJ,EAAUK,eAAe,CAACG,OAAhB,CAAwBR,IAAxB;AAEV,WAAO,MAAMK,eAAe,CAACE,UAAhB,EAAb;AACD,GARM,EASP,CAACP,IAAD,CATO,CAAT;AAWA,SAAO,CAACC,OAAD,EAAUH,KAAV,CAAP;AACD,CAvBD","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nexport default ({ root = null, rootMargin, threshold = 0 }) => {\n  const [entry, updateEntry] = useState({});\n  const [node, setNode] = useState(null);\n\n  const observer = useRef(\n    new window.IntersectionObserver(([entry]) => updateEntry(entry), {\n      root,\n      rootMargin,\n      threshold\n    })\n  );\n  useEffect(\n    () => {\n      const { current: currentObserver } = observer;\n      currentObserver.disconnect();\n\n      if (node) currentObserver.observe(node);\n\n      return () => currentObserver.disconnect();\n    },\n    [node]\n  );\n  return [setNode, entry];\n};"]},"metadata":{},"sourceType":"module"}