{"ast":null,"code":"var _jsxFileName = \"/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/components/appComponent.js\";\nimport React from \"react\";\nimport { withApollo } from \"@apollo/react-hoc\";\nimport { Query } from 'react-apollo';\nimport { Navbar } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./../assets/scss/style.scss\";\nimport { ALL_CHARACTERS } from \"../queries\";\nimport ErrorComponent from \"./errorComponent\";\nimport LoadingComponent from \"./loadingComponent\";\nimport CharacterItemComponent from \"./characterItemComponent\";\n\nclass AppComponent extends React.Component {\n  getVariables() {\n    return {\n      length: 5\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      className: \"navbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"navbar-brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \" Ravn Star Wars Registry\"))), React.createElement(\"main\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Query, {\n      query: ALL_CHARACTERS,\n      variables: this.getVariables(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return React.createElement(LoadingComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n      if (error) return React.createElement(ErrorComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      });\n      let listView = data.allPeople.edges.map(obj => {\n        return React.createElement(CharacterItemComponent, {\n          node: obj.node,\n          client: this.props.client,\n          key: obj.node.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, listView)));\n    })));\n  }\n\n}\n\nexport default withApollo(AppComponent);","map":{"version":3,"sources":["/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/components/appComponent.js"],"names":["React","withApollo","Query","Navbar","ALL_CHARACTERS","ErrorComponent","LoadingComponent","CharacterItemComponent","AppComponent","Component","getVariables","length","render","loading","error","data","listView","allPeople","edges","map","obj","node","props","client","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,SAAQC,KAAR,QAAoB,cAApB;AACA,SAAQC,MAAR,QAAqB,YAArB;AAEA,OAAO,sCAAP;AACA,OAAO,6BAAP;AAEA,SAAQC,cAAR,QAA6B,YAA7B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;;AAEA,MAAMC,YAAN,SAA2BR,KAAK,CAACS,SAAjC,CAA2C;AAEzCC,EAAAA,YAAY,GAAG;AACb,WAAO;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,CADF,CADF,EAME;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAER,cAAd;AAA8B,MAAA,SAAS,EAAE,KAAKM,YAAL,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC;AAACG,MAAAA,OAAD;AAAUC,MAAAA,KAAV;AAAiBC,MAAAA;AAAjB,KAAD,KAA4B;AAC3B,UAAIF,OAAJ,EAAa,OAAO,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACb,UAAIC,KAAJ,EAAW,OAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACX,UAAIE,QAAQ,GAAGD,IAAI,CAACE,SAAL,CAAeC,KAAf,CAAqBC,GAArB,CAA0BC,GAAD,IAAS;AAC/C,eAAO,oBAAC,sBAAD;AAAwB,UAAA,IAAI,EAAEA,GAAG,CAACC,IAAlC;AAAwC,UAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,MAA3D;AAAmE,UAAA,GAAG,EAAEH,GAAG,CAACC,IAAJ,CAASG,EAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFc,CAAf;AAGA,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACN;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGR,QADH,CADF,CADM,CAAR;AAOD,KAdH,CADF,CANF,CADF;AA2BD;;AAlCwC;;AAqC3C,eAAef,UAAU,CAACO,YAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport {withApollo} from \"@apollo/react-hoc\";\nimport {Query} from 'react-apollo';\nimport {Navbar} from 'reactstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./../assets/scss/style.scss\";\n\nimport {ALL_CHARACTERS} from \"../queries\";\nimport ErrorComponent from \"./errorComponent\";\nimport LoadingComponent from \"./loadingComponent\";\nimport CharacterItemComponent from \"./characterItemComponent\";\n\nclass AppComponent extends React.Component {\n\n  getVariables() {\n    return {length: 5};\n  }\n\n  render() {\n    return (\n      <div>\n        <header>\n          <Navbar className=\"navbar\">\n            <span className=\"navbar-brand\"> Ravn Star Wars Registry</span>\n          </Navbar>\n        </header>\n        <main className=\"container-fluid\">\n          <Query query={ALL_CHARACTERS} variables={this.getVariables()}>\n            {({loading, error, data}) => {\n              if (loading) return <LoadingComponent/>;\n              if (error) return <ErrorComponent/>;\n              let listView = data.allPeople.edges.map((obj) => {\n                return <CharacterItemComponent node={obj.node} client={this.props.client} key={obj.node.id}/>\n              });\n              return (<section>\n                <div className=\"row\">\n                  <div className=\"col-md-3\">\n                    {listView}\n                  </div>\n                </div>\n              </section>);\n            }}\n          </Query>\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default withApollo(AppComponent);"]},"metadata":{},"sourceType":"module"}