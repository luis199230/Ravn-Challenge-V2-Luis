{"ast":null,"code":"var _jsxFileName = \"/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/components/app.js\";\nimport React from \"react\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { Navbar } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./../assets/scss/style.scss\";\nimport { ALL_CHARACTERS, FIND_CHARACTER_BY_ID } from \"../queries\";\nimport CharacteristicItem from \"../templates/characteristicItem\"; //import PeopleItem from \"../templates/peopleItem\";\n\nfunction App() {\n  const getAllCharacters = useQuery(ALL_CHARACTERS, {\n    variables: {\n      length: 5\n    }\n  });\n  const character = useQuery(FIND_CHARACTER_BY_ID, {\n    variables: {\n      id: \"cGVvcGxlOjE=\"\n    }\n  });\n  let content;\n\n  if (getAllCharacters.loading || character.loading) {\n    content = React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ml-loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })), \"Loading\"))));\n  }\n\n  if (getAllCharacters.error || character.error) {\n    content = React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Failed to Load Data\"))));\n  }\n\n  if (!getAllCharacters.loading && !getAllCharacters.error) {\n    let listview = getAllCharacters.data.allPeople.edges.map(obj => {\n      return React.createElement(CharacteristicItem, {\n        node: obj.node,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    });\n    content = React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, listview)));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    className: \"navbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"navbar-brand\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \" Ravn Star Wars Registry\"))), React.createElement(\"main\", {\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, content));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/components/app.js"],"names":["React","useQuery","Navbar","ALL_CHARACTERS","FIND_CHARACTER_BY_ID","CharacteristicItem","App","getAllCharacters","variables","length","character","id","content","loading","error","listview","data","allPeople","edges","map","obj","node"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,SAAQC,MAAR,QAAqB,YAArB;AAEA,OAAO,sCAAP;AACA,OAAO,6BAAP;AAEA,SAAQC,cAAR,EAAwBC,oBAAxB,QAAmD,YAAnD;AACA,OAAOC,kBAAP,MAA+B,iCAA/B,C,CAEA;;AAEA,SAASC,GAAT,GAAe;AACb,QAAMC,gBAAgB,GAAGN,QAAQ,CAACE,cAAD,EAAiB;AAACK,IAAAA,SAAS,EAAE;AAACC,MAAAA,MAAM,EAAE;AAAT;AAAZ,GAAjB,CAAjC;AACA,QAAMC,SAAS,GAAGT,QAAQ,CAACG,oBAAD,EAAuB;AAACI,IAAAA,SAAS,EAAE;AAACG,MAAAA,EAAE,EAAE;AAAL;AAAZ,GAAvB,CAA1B;AACA,MAAIC,OAAJ;;AACA,MAAIL,gBAAgB,CAACM,OAAjB,IAA4BH,SAAS,CAACG,OAA1C,EAAkD;AAChDD,IAAAA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAfwBD;;AACD,MAAIL,gBAAgB,CAACO,KAAjB,IAA0BJ,SAAS,CAACI,KAAxC,EAA8C;AAC5CF,IAAAA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CADF,CADF,CADF;AAQD;;AAED,MAAG,CAACL,gBAAgB,CAACM,OAAlB,IAA6B,CAACN,gBAAgB,CAACO,KAAlD,EAAwD;AACtD,QAAIC,QAAQ,GAAGR,gBAAgB,CAACS,IAAjB,CAAsBC,SAAtB,CAAgCC,KAAhC,CAAsCC,GAAtC,CAA2CC,GAAD,IAAS;AAChE,aAAO,oBAAC,kBAAD;AAAoB,QAAA,IAAI,EAAEA,GAAG,CAACC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFc,CAAf;AAGAT,IAAAA,OAAO,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACT;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGG,QADH,CADF,CADS,CAAX;AAOD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CADF,CADF,EAME;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OADH,CANF,CADF;AAYD;;AAED,eAAeN,GAAf","sourcesContent":["import React from \"react\";\nimport {useQuery} from '@apollo/react-hooks';\nimport {Navbar} from 'reactstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./../assets/scss/style.scss\";\n\nimport {ALL_CHARACTERS, FIND_CHARACTER_BY_ID} from \"../queries\";\nimport CharacteristicItem from \"../templates/characteristicItem\";\n\n//import PeopleItem from \"../templates/peopleItem\";\n\nfunction App() {\n  const getAllCharacters = useQuery(ALL_CHARACTERS, {variables: {length: 5}});\n  const character = useQuery(FIND_CHARACTER_BY_ID, {variables: {id: \"cGVvcGxlOjE=\"}});\n  let content;\n  if (getAllCharacters.loading || character.loading){\n    content = (\n      <section>\n        <div className=\"row\">\n          <div className=\"col-md-3\">\n            <div className=\"loading\">\n              <div className=\"ml-loader\">\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n              </div>\n              Loading\n            </div>\n          </div>\n        </div>\n      </section>);\n  }\n  if (getAllCharacters.error || character.error){\n    content = (\n      <section>\n        <div className=\"row\">\n          <div className=\"col-md-3\">\n            <div className=\"error\">Failed to Load Data</div>\n          </div>\n        </div>\n      </section>);\n  }\n\n  if(!getAllCharacters.loading && !getAllCharacters.error){\n    let listview = getAllCharacters.data.allPeople.edges.map((obj) => {\n      return <CharacteristicItem node={obj.node}/>\n    });\n    content = (<section>\n      <div className=\"row\">\n        <div className=\"col-md-3\">\n          {listview}\n        </div>\n      </div>\n    </section>);\n  }\n\n  return (\n    <div>\n      <header>\n        <Navbar className=\"navbar\">\n          <span className=\"navbar-brand\"> Ravn Star Wars Registry</span>\n        </Navbar>\n      </header>\n      <main className=\"container-fluid\">\n        {content}\n      </main>\n    </div>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}