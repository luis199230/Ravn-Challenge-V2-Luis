{"ast":null,"code":"var _jsxFileName = \"/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/index.js\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\"; //import {ApolloProvider, Query} from \"react-apollo\";\n//import mobiscroll from \"@mobiscroll/react-lite\";\n//import '@mobiscroll/react-lite/dist/css/mobiscroll.min.css';\n//import api from \"./hocs/api\";\n\n/*import VehicleItem from \"./templates/vehicleItem\";\nimport PeopleItem from \"./templates/peopleItem\";\nimport CharacteristicItem from \"./templates/characteristicItem\";*/\n\nconst style = {\n  height: 30,\n  border: \"1px solid green\",\n  margin: 6,\n  padding: 8\n};\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: Array.from({\n        length: 5\n      }),\n      showLoader: false\n    };\n\n    this.fetchMoreData = () => {\n      // a fake async api call like which sends\n      // 20 more records in 1.5 secs\n      this.setState({\n        showLoader: true\n      });\n      {\n        console.log('execute');\n      }\n      setTimeout(() => {\n        this.setState({\n          items: this.state.items.concat(Array.from({\n            length: 5\n          }))\n        });\n        this.setState({\n          showLoader: false\n        });\n      }, 100);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"demo: react-infinite-scroll-component\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(InfiniteScroll, {\n      scrollThreshold: \"100px\",\n      dataLength: this.state.items.length,\n      next: this.fetchMoreData,\n      hasMore: true,\n      loader: React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Loading...\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.items.map((i, index) => React.createElement(\"div\", {\n      style: style,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"div - #\", index))));\n  }\n\n}\n/*class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      characters: api.listCharacters(),\n      selectedCharacter: null,\n      data: []\n    };\n    this.getData();\n  }\n\n  async fetchUser() {\n    const { client } = this.props;\n    api.listCharacters();\n    this.setState({ user });\n  }\n\n  render() {\n    let content = '';\n    const selectedPerson = this.state.selectedPerson;\n\n    if(selectedPerson !== null){\n      content = (<div className=\"mbsc-form-grid\">\n        <mobiscroll.CardHeader>\n          <span className=\"mbsc-bold\">General information</span>\n        </mobiscroll.CardHeader>\n        <mobiscroll.CardContent>\n          <mobiscroll.Listview itemType={CharacteristicItem} data={this.state.characteristics}/>\n        </mobiscroll.CardContent>\n        <mobiscroll.CardHeader>\n          <span className=\"mbsc-bold\">Vehicles</span>\n        </mobiscroll.CardHeader>\n        <mobiscroll.CardContent>\n          <mobiscroll.Listview itemType={VehicleItem} data={this.state.vehicles}/>\n        </mobiscroll.CardContent>\n      </div>);\n    }\n\n    return (\n      <mobiscroll.Form theme=\"mobiscroll\" className=\"md-master-detail-demo\">\n        <div className=\"mbsc-grid mbsc-no-padding\">\n          <div className=\"mbsc-row\">\n            <div className=\"mbsc-col-12 mbsc-col-md-2 mbsc-col-sm-3\">\n              <mobiscroll.Listview select=\"single\" itemType={PeopleItem} data={this.state.people} onItemTap={this.changePerson} />\n            </div>\n            <div className=\"mbsc-col-12 mbsc-col-md-10 mbsc-col-sm-9 md-col-border\">\n              {content}\n            </div>\n          </div>\n        </div>\n      </mobiscroll.Form>\n    );\n  }\n\n  getData() {\n    return [];\n  }\n\n  changePerson = (event, inst) => {\n    this.setState({ selectedPerson: this.state.data[event.index]});\n  }\n}*/\n\n\nrender(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 135\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/index.js"],"names":["React","render","InfiniteScroll","style","height","border","margin","padding","App","Component","state","items","Array","from","length","showLoader","fetchMoreData","setState","console","log","setTimeout","concat","map","i","index","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,OAAOC,cAAP,MAA2B,iCAA3B,C,CAEA;AACA;AACA;AAEA;;AAEA;;;;AAIA,MAAMC,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE,EADI;AAEZC,EAAAA,MAAM,EAAE,iBAFI;AAGZC,EAAAA,MAAM,EAAE,CAHI;AAIZC,EAAAA,OAAO,EAAE;AAJG,CAAd;;AAOA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,KAAK,EAAEC,KAAK,CAACC,IAAN,CAAW;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAX,CADD;AAENC,MAAAA,UAAU,EAAE;AAFN,KADwB;;AAAA,SAMhCC,aANgC,GAMhB,MAAM;AACpB;AACA;AAEA,WAAKC,QAAL,CAAc;AACZF,QAAAA,UAAU,EAAE;AADA,OAAd;AAGA;AAAEG,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAAyB;AAE3BC,MAAAA,UAAU,CAAC,MAAM;AAEf,aAAKH,QAAL,CAAc;AACZN,UAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBU,MAAjB,CAAwBT,KAAK,CAACC,IAAN,CAAW;AAACC,YAAAA,MAAM,EAAE;AAAT,WAAX,CAAxB;AADK,SAAd;AAIA,aAAKG,QAAL,CAAc;AACZF,UAAAA,UAAU,EAAE;AADA,SAAd;AAGD,OATS,EASP,GATO,CAAV;AAUD,KAzB+B;AAAA;;AA2BhCd,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,cAAD;AACE,MAAA,eAAe,EAAC,OADlB;AAEE,MAAA,UAAU,EAAE,KAAKS,KAAL,CAAWC,KAAX,CAAiBG,MAF/B;AAGE,MAAA,IAAI,EAAE,KAAKE,aAHb;AAIE,MAAA,OAAO,EAAE,IAJX;AAKE,MAAA,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAKN,KAAL,CAAWC,KAAX,CAAiBW,GAAjB,CAAqB,CAACC,CAAD,EAAIC,KAAJ,KACpB;AAAK,MAAA,KAAK,EAAErB,KAAZ;AAAmB,MAAA,GAAG,EAAEqB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACUA,KADV,CADD,CANH,CAHF,CADF;AAkBD;;AA9C+B;AAkDlC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DAvB,MAAM,CAAC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,EAASwB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAT,CAAN","sourcesContent":["import React from \"react\";\nimport {render} from \"react-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\n//import {ApolloProvider, Query} from \"react-apollo\";\n//import mobiscroll from \"@mobiscroll/react-lite\";\n//import '@mobiscroll/react-lite/dist/css/mobiscroll.min.css';\n\n//import api from \"./hocs/api\";\n\n/*import VehicleItem from \"./templates/vehicleItem\";\nimport PeopleItem from \"./templates/peopleItem\";\nimport CharacteristicItem from \"./templates/characteristicItem\";*/\n\nconst style = {\n  height: 30,\n  border: \"1px solid green\",\n  margin: 6,\n  padding: 8\n};\n\nclass App extends React.Component {\n  state = {\n    items: Array.from({length: 5}),\n    showLoader: false\n  };\n\n  fetchMoreData = () => {\n    // a fake async api call like which sends\n    // 20 more records in 1.5 secs\n\n    this.setState({\n      showLoader: true\n    });\n    { console.log('execute'); }\n\n    setTimeout(() => {\n\n      this.setState({\n        items: this.state.items.concat(Array.from({length: 5}))\n      });\n\n      this.setState({\n        showLoader: false\n      });\n    }, 100);\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>demo: react-infinite-scroll-component</h1>\n        <hr/>\n        <InfiniteScroll\n          scrollThreshold=\"100px\"\n          dataLength={this.state.items.length}\n          next={this.fetchMoreData}\n          hasMore={true}\n          loader={<h4>Loading...</h4>}>\n          {this.state.items.map((i, index) => (\n            <div style={style} key={index}>\n              div - #{index}\n            </div>\n          ))}\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\n\n\n/*class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      characters: api.listCharacters(),\n      selectedCharacter: null,\n      data: []\n    };\n    this.getData();\n  }\n\n  async fetchUser() {\n    const { client } = this.props;\n    api.listCharacters();\n    this.setState({ user });\n  }\n\n  render() {\n    let content = '';\n    const selectedPerson = this.state.selectedPerson;\n\n    if(selectedPerson !== null){\n      content = (<div className=\"mbsc-form-grid\">\n        <mobiscroll.CardHeader>\n          <span className=\"mbsc-bold\">General information</span>\n        </mobiscroll.CardHeader>\n        <mobiscroll.CardContent>\n          <mobiscroll.Listview itemType={CharacteristicItem} data={this.state.characteristics}/>\n        </mobiscroll.CardContent>\n        <mobiscroll.CardHeader>\n          <span className=\"mbsc-bold\">Vehicles</span>\n        </mobiscroll.CardHeader>\n        <mobiscroll.CardContent>\n          <mobiscroll.Listview itemType={VehicleItem} data={this.state.vehicles}/>\n        </mobiscroll.CardContent>\n      </div>);\n    }\n\n    return (\n      <mobiscroll.Form theme=\"mobiscroll\" className=\"md-master-detail-demo\">\n        <div className=\"mbsc-grid mbsc-no-padding\">\n          <div className=\"mbsc-row\">\n            <div className=\"mbsc-col-12 mbsc-col-md-2 mbsc-col-sm-3\">\n              <mobiscroll.Listview select=\"single\" itemType={PeopleItem} data={this.state.people} onItemTap={this.changePerson} />\n            </div>\n            <div className=\"mbsc-col-12 mbsc-col-md-10 mbsc-col-sm-9 md-col-border\">\n              {content}\n            </div>\n          </div>\n        </div>\n      </mobiscroll.Form>\n    );\n  }\n\n  getData() {\n    return [];\n  }\n\n  changePerson = (event, inst) => {\n    this.setState({ selectedPerson: this.state.data[event.index]});\n  }\n}*/\n\nrender(<App/>, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}