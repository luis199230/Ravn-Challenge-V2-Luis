{"ast":null,"code":"import _slicedToArray from \"/Users/luisbenavides/Sites/listview-master-detail-viewdemo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/components/app.js\";\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport LazyLoad from 'react-lazyload';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./../assets/scss/style.scss\";\nimport { ALL_CHARACTERS } from \"../queries\";\nimport ErrorView from \"../views/errorView\";\nimport LoadingView from \"../views/loadingView\";\nimport CharactersView from \"../views/charactersView\";\nexport default function App() {\n  let _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 1),\n      after = _useState2[0];\n\n  let _useState3 = useState(5),\n      _useState4 = _slicedToArray(_useState3, 1),\n      length = _useState4[0];\n\n  let character = useState(null);\n\n  const _useQuery = useQuery(ALL_CHARACTERS, {\n    variables: {\n      after: after,\n      length: length\n    }\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return React.createElement(LoadingView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  });\n  if (error) return React.createElement(ErrorView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  });\n  let characters = data.allPeople.edges;\n  after = data.allPeople.pageInfo.endCursor;\n  let hasNext = data.allPeople.pageInfo.hasNextPage;\n  return React.createElement(LazyLoad, {\n    height: 100,\n    offset: 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(CharactersView, {\n    characters: characters,\n    character: character,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/components/app.js"],"names":["React","useState","useQuery","LazyLoad","ALL_CHARACTERS","ErrorView","LoadingView","CharactersView","App","after","length","character","variables","loading","error","data","characters","allPeople","edges","pageInfo","endCursor","hasNext","hasNextPage"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,OAAO,sCAAP;AACA,OAAO,6BAAP;AAGA,SAAQC,cAAR,QAA6B,YAA7B;AAEA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AAGA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACdP,QAAQ,CAAC,EAAD,CADM;AAAA;AAAA,MACvBQ,KADuB;;AAAA,mBAEbR,QAAQ,CAAC,CAAD,CAFK;AAAA;AAAA,MAEvBS,MAFuB;;AAG5B,MAAIC,SAAS,GAAGV,QAAQ,CAAC,IAAD,CAAxB;;AAH4B,oBAKGC,QAAQ,CAACE,cAAD,EAAiB;AACtDQ,IAAAA,SAAS,EAAE;AAACH,MAAAA,KAAK,EAAEA,KAAR;AAAeC,MAAAA,MAAM,EAAEA;AAAvB;AAD2C,GAAjB,CALX;AAAA,QAKrBG,OALqB,aAKrBA,OALqB;AAAA,QAKZC,KALY,aAKZA,KALY;AAAA,QAKLC,IALK,aAKLA,IALK;;AAS5B,MAAIF,OAAJ,EAAa,OAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEX,MAAIE,UAAU,GAAGD,IAAI,CAACE,SAAL,CAAeC,KAAhC;AACAT,EAAAA,KAAK,GAAGM,IAAI,CAACE,SAAL,CAAeE,QAAf,CAAwBC,SAAhC;AACA,MAAIC,OAAO,GAAGN,IAAI,CAACE,SAAL,CAAeE,QAAf,CAAwBG,WAAtC;AACA,SAAQ,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAE,GAAlB;AAAuB,IAAA,MAAM,EAAE,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACN,oBAAC,cAAD;AAAgB,IAAA,UAAU,EAAEN,UAA5B;AAAwC,IAAA,SAAS,EAAEL,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,CAAR;AAGD","sourcesContent":["import React, {useState} from \"react\";\nimport {useQuery} from \"@apollo/react-hooks\";\nimport LazyLoad from 'react-lazyload';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./../assets/scss/style.scss\";\n\n\nimport {ALL_CHARACTERS} from \"../queries\";\n\nimport ErrorView from \"../views/errorView\";\nimport LoadingView from \"../views/loadingView\";\nimport CharactersView from \"../views/charactersView\";\n\n\nexport default function App() {\n  let [after] = useState(\"\");\n  let [length] = useState(5);\n  let character = useState(null);\n\n  const {loading, error, data} = useQuery(ALL_CHARACTERS, {\n    variables: {after: after, length: length},\n  });\n\n  if (loading) return <LoadingView/>;\n  if (error) return <ErrorView/>;\n\n  let characters = data.allPeople.edges;\n  after = data.allPeople.pageInfo.endCursor;\n  let hasNext = data.allPeople.pageInfo.hasNextPage;\n  return (<LazyLoad height={100} offset={100}>\n    <CharactersView characters={characters} character={character}/>\n  </LazyLoad>);\n}"]},"metadata":{},"sourceType":"module"}