{"ast":null,"code":"var _jsxFileName = \"/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/components/appComponent.js\";\nimport React from \"react\";\nimport { withApollo } from \"@apollo/react-hoc\";\nimport { Navbar } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./../assets/scss/style.scss\";\nimport { ALL_CHARACTERS } from \"../queries\";\nimport ErrorComponent from \"./errorComponent\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport CharacterItemComponent from \"./characterItemComponent\";\n\nclass AppComponent extends React.Component {\n  async getContent() {\n    let content;\n    const getAllCharacters = await this.props.client.query({\n      query: ALL_CHARACTERS,\n      variables: {\n        variables: {\n          length: 5\n        }\n      }\n    });\n\n    if (getAllCharacters.loading) {\n      content = React.createElement(LoadingComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      });\n    }\n\n    if (getAllCharacters.error) {\n      content = React.createElement(ErrorComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      });\n    }\n\n    if (!getAllCharacters.loading && !getAllCharacters.error) {\n      let listView = getAllCharacters.data.allPeople.edges.map(obj => {\n        return React.createElement(CharacterItemComponent, {\n          node: obj.node,\n          client: this.props.client,\n          key: obj.node.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n      });\n      content = React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, listView)));\n    }\n\n    return content;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      className: \"navbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"navbar-brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \" Ravn Star Wars Registry\"))), React.createElement(\"main\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.getContent()));\n  }\n\n}\n\nexport default withApollo(AppComponent);","map":{"version":3,"sources":["/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/components/appComponent.js"],"names":["React","withApollo","Navbar","ALL_CHARACTERS","ErrorComponent","LoadingComponent","CharacterItemComponent","AppComponent","Component","getContent","content","getAllCharacters","props","client","query","variables","length","loading","error","listView","data","allPeople","edges","map","obj","node","id","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,SAAQC,MAAR,QAAqB,YAArB;AAEA,OAAO,sCAAP;AACA,OAAO,6BAAP;AAEA,SAAQC,cAAR,QAA6B,YAA7B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;;AAEA,MAAMC,YAAN,SAA2BP,KAAK,CAACQ,SAAjC,CAA2C;AACzC,QAAMC,UAAN,GAAmB;AACjB,QAAIC,OAAJ;AACA,UAAMC,gBAAgB,GAAG,MAAM,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,KAAlB,CAAwB;AACrDA,MAAAA,KAAK,EAAEX,cAD8C;AAErDY,MAAAA,SAAS,EAAE;AAACA,QAAAA,SAAS,EAAE;AAACC,UAAAA,MAAM,EAAE;AAAT;AAAZ;AAF0C,KAAxB,CAA/B;;AAKA,QAAIL,gBAAgB,CAACM,OAArB,EAA8B;AAC5BP,MAAAA,OAAO,GAAG,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACD;;AACD,QAAIC,gBAAgB,CAACO,KAArB,EAA4B;AAC1BR,MAAAA,OAAO,GAAG,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACD;;AAED,QAAI,CAACC,gBAAgB,CAACM,OAAlB,IAA6B,CAACN,gBAAgB,CAACO,KAAnD,EAA0D;AACxD,UAAIC,QAAQ,GAAGR,gBAAgB,CAACS,IAAjB,CAAsBC,SAAtB,CAAgCC,KAAhC,CAAsCC,GAAtC,CAA2CC,GAAD,IAAS;AAChE,eAAO,oBAAC,sBAAD;AAAwB,UAAA,IAAI,EAAEA,GAAG,CAACC,IAAlC;AAAwC,UAAA,MAAM,EAAE,KAAKb,KAAL,CAAWC,MAA3D;AAAmE,UAAA,GAAG,EAAEW,GAAG,CAACC,IAAJ,CAASC,EAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFc,CAAf;AAGAhB,MAAAA,OAAO,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACT;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGS,QADH,CADF,CADS,CAAX;AAOD;;AACD,WAAOT,OAAP;AACD;;AAEDiB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,CADF,CADF,EAME;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKlB,UAAL,EADH,CANF,CADF;AAYD;;AA3CwC;;AA8C3C,eAAeR,UAAU,CAACM,YAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport {withApollo} from \"@apollo/react-hoc\";\nimport {Navbar} from 'reactstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./../assets/scss/style.scss\";\n\nimport {ALL_CHARACTERS} from \"../queries\";\nimport ErrorComponent from \"./errorComponent\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport CharacterItemComponent from \"./characterItemComponent\";\n\nclass AppComponent extends React.Component {\n  async getContent() {\n    let content;\n    const getAllCharacters = await this.props.client.query({\n      query: ALL_CHARACTERS,\n      variables: {variables: {length: 5}}\n    });\n\n    if (getAllCharacters.loading) {\n      content = <LoadingComponent/>;\n    }\n    if (getAllCharacters.error) {\n      content = <ErrorComponent/>;\n    }\n\n    if (!getAllCharacters.loading && !getAllCharacters.error) {\n      let listView = getAllCharacters.data.allPeople.edges.map((obj) => {\n        return <CharacterItemComponent node={obj.node} client={this.props.client} key={obj.node.id}/>\n      });\n      content = (<section>\n        <div className=\"row\">\n          <div className=\"col-md-3\">\n            {listView}\n          </div>\n        </div>\n      </section>);\n    }\n    return content;\n  }\n\n  render() {\n    return (\n      <div>\n        <header>\n          <Navbar className=\"navbar\">\n            <span className=\"navbar-brand\"> Ravn Star Wars Registry</span>\n          </Navbar>\n        </header>\n        <main className=\"container-fluid\">\n          {this.getContent()}\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default withApollo(AppComponent);"]},"metadata":{},"sourceType":"module"}