{"ast":null,"code":"var _jsxFileName = \"/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/components/app.js\";\nimport React from \"react\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { Navbar } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./../assets/scss/style.scss\";\nimport { ALL_CHARACTERS, FIND_CHARACTER_BY_ID } from \"../queries\";\nimport CharacterItemComponent from \"./characterItemComponent\";\nimport ErrorComponent from \"./errorComponent\";\nimport LoadingComponent from \"./LoadingComponent\";\n\nclass AppComponent extends React.Component {\n  render() {\n    const getAllCharacters = useQuery(ALL_CHARACTERS, {\n      variables: {\n        length: 5\n      }\n    });\n    const character = useQuery(FIND_CHARACTER_BY_ID, {\n      variables: {\n        id: \"cGVvcGxlOjE=\"\n      }\n    });\n    let content;\n\n    if (getAllCharacters.loading || character.loading) {\n      content = React.createElement(LoadingComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      });\n    }\n\n    if (getAllCharacters.error || character.error) {\n      content = React.createElement(ErrorComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      });\n    }\n\n    if (!getAllCharacters.loading && !getAllCharacters.error) {\n      let listView = getAllCharacters.data.allPeople.edges.map(obj => {\n        return React.createElement(CharacterItemComponent, {\n          node: obj.node,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        });\n      });\n      content = React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, listView)));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      className: \"navbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"navbar-brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \" Ravn Star Wars Registry\"))), React.createElement(\"main\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, content));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/components/app.js"],"names":["React","useQuery","Navbar","ALL_CHARACTERS","FIND_CHARACTER_BY_ID","CharacterItemComponent","ErrorComponent","LoadingComponent","AppComponent","Component","render","getAllCharacters","variables","length","character","id","content","loading","error","listView","data","allPeople","edges","map","obj","node","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,SAAQC,MAAR,QAAqB,YAArB;AAEA,OAAO,sCAAP;AACA,OAAO,6BAAP;AAEA,SAAQC,cAAR,EAAwBC,oBAAxB,QAAmD,YAAnD;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAMC,YAAN,SAA2BR,KAAK,CAACS,SAAjC,CAA2C;AAEzCC,EAAAA,MAAM,GAAG;AACP,UAAMC,gBAAgB,GAAGV,QAAQ,CAACE,cAAD,EAAiB;AAACS,MAAAA,SAAS,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT;AAAZ,KAAjB,CAAjC;AACA,UAAMC,SAAS,GAAGb,QAAQ,CAACG,oBAAD,EAAuB;AAACQ,MAAAA,SAAS,EAAE;AAACG,QAAAA,EAAE,EAAE;AAAL;AAAZ,KAAvB,CAA1B;AACA,QAAIC,OAAJ;;AAEA,QAAIL,gBAAgB,CAACM,OAAjB,IAA4BH,SAAS,CAACG,OAA1C,EAAkD;AAChDD,MAAAA,OAAO,GAAG,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACD;;AACD,QAAIL,gBAAgB,CAACO,KAAjB,IAA0BJ,SAAS,CAACI,KAAxC,EAA8C;AAC5CF,MAAAA,OAAO,GAAG,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACD;;AACD,QAAG,CAACL,gBAAgB,CAACM,OAAlB,IAA6B,CAACN,gBAAgB,CAACO,KAAlD,EAAwD;AACtD,UAAIC,QAAQ,GAAGR,gBAAgB,CAACS,IAAjB,CAAsBC,SAAtB,CAAgCC,KAAhC,CAAsCC,GAAtC,CAA2CC,GAAD,IAAS;AAChE,eAAO,oBAAC,sBAAD;AAAwB,UAAA,IAAI,EAAEA,GAAG,CAACC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFc,CAAf;AAGAT,MAAAA,OAAO,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACT;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGG,QADH,CADF,CADS,CAAX;AAOD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,CADF,CADF,EAME;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,OADH,CANF,CADF;AAYD;;AArCwC;;AAwC3C,eAAeU,GAAf","sourcesContent":["import React from \"react\";\nimport {useQuery} from '@apollo/react-hooks';\nimport {Navbar} from 'reactstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./../assets/scss/style.scss\";\n\nimport {ALL_CHARACTERS, FIND_CHARACTER_BY_ID} from \"../queries\";\nimport CharacterItemComponent from \"./characterItemComponent\";\nimport ErrorComponent from \"./errorComponent\";\nimport LoadingComponent from \"./LoadingComponent\";\n\nclass AppComponent extends React.Component {\n\n  render() {\n    const getAllCharacters = useQuery(ALL_CHARACTERS, {variables: {length: 5}});\n    const character = useQuery(FIND_CHARACTER_BY_ID, {variables: {id: \"cGVvcGxlOjE=\"}});\n    let content;\n\n    if (getAllCharacters.loading || character.loading){\n      content = <LoadingComponent/>;\n    }\n    if (getAllCharacters.error || character.error){\n      content = <ErrorComponent/>;\n    }\n    if(!getAllCharacters.loading && !getAllCharacters.error){\n      let listView = getAllCharacters.data.allPeople.edges.map((obj) => {\n        return <CharacterItemComponent node={obj.node}/>\n      });\n      content = (<section>\n        <div className=\"row\">\n          <div className=\"col-md-3\">\n            {listView}\n          </div>\n        </div>\n      </section>);\n    }\n    return (\n      <div>\n        <header>\n          <Navbar className=\"navbar\">\n            <span className=\"navbar-brand\"> Ravn Star Wars Registry</span>\n          </Navbar>\n        </header>\n        <main className=\"container-fluid\">\n          {content}\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}