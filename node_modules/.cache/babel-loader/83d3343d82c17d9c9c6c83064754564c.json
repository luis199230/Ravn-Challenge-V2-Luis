{"ast":null,"code":"var _jsxFileName = \"/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/components/appComponent.js\";\nimport React from \"react\";\nimport { withApollo } from \"@apollo/react-hoc\";\nimport { Query } from 'react-apollo';\nimport { Navbar } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./../assets/scss/style.scss\";\nimport { ALL_CHARACTERS, FIND_CHARACTER_BY_ID } from \"../queries\";\nimport ErrorComponent from \"./errorComponent\";\nimport LoadingComponent from \"./loadingComponent\";\nimport CharacterItemComponent from \"./characterItemComponent\";\nimport DetailComponent from \"./detailComponent\";\n\nclass AppComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.length = 5;\n    this.state = {\n      character: null\n    };\n  }\n\n  getVariables() {\n    return {\n      length: this.length\n    };\n  }\n\n  async getCharacterById(id, client) {\n    let character = (await client.query({\n      query: FIND_CHARACTER_BY_ID,\n      variables: {\n        id: id\n      }\n    })).data;\n    this.setState({\n      character: character\n    });\n  }\n\n  renderData(data) {\n    let content = data.allPeople.edges.map(obj => {\n      return React.createElement(CharacterItemComponent, {\n        node: obj.node,\n        key: obj.node.id,\n        getCharacterById: this.getCharacterById.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, content), React.createElement(\"div\", {\n      className: \"col-md-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.state.character !== null ? React.createElement(DetailComponent, {\n      character: this.state.character,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }) : '')));\n  }\n\n  executeQuery({\n    loading,\n    error,\n    data\n  }) {\n    if (loading) return React.createElement(LoadingComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    });\n    if (error) return React.createElement(ErrorComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    });\n    return this.renderData(data);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      className: \"navbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"navbar-brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \" Ravn Star Wars Registry\"))), React.createElement(\"main\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Query, {\n      query: ALL_CHARACTERS,\n      variables: this.getVariables(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.executeQuery.bind(this))));\n  }\n\n}\n\nexport default withApollo(AppComponent);","map":{"version":3,"sources":["/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/components/appComponent.js"],"names":["React","withApollo","Query","Navbar","ALL_CHARACTERS","FIND_CHARACTER_BY_ID","ErrorComponent","LoadingComponent","CharacterItemComponent","DetailComponent","AppComponent","Component","constructor","props","length","state","character","getVariables","getCharacterById","id","client","query","variables","data","setState","renderData","content","allPeople","edges","map","obj","node","bind","executeQuery","loading","error","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,SAAQC,KAAR,QAAoB,cAApB;AACA,SAAQC,MAAR,QAAqB,YAArB;AAEA,OAAO,sCAAP;AACA,OAAO,6BAAP;AAEA,SAAQC,cAAR,EAAwBC,oBAAxB,QAAmD,YAAnD;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,YAAN,SAA2BV,KAAK,CAACW,SAAjC,CAA2C;AAEzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,MAAL,GAAc,CAAd;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAAb;AACD;;AAEDC,EAAAA,YAAY,GAAG;AACb,WAAO;AAACH,MAAAA,MAAM,EAAE,KAAKA;AAAd,KAAP;AACD;;AAED,QAAMI,gBAAN,CAAuBC,EAAvB,EAA2BC,MAA3B,EAAkC;AAChC,QAAIJ,SAAS,GAAG,CAAC,MAAMI,MAAM,CAACC,KAAP,CAAa;AAClCA,MAAAA,KAAK,EAAEhB,oBAD2B;AAElCiB,MAAAA,SAAS,EAAE;AAACH,QAAAA,EAAE,EAAEA;AAAL;AAFuB,KAAb,CAAP,EAGZI,IAHJ;AAIA,SAAKC,QAAL,CAAc;AAACR,MAAAA,SAAS,EAAEA;AAAZ,KAAd;AACD;;AAEDS,EAAAA,UAAU,CAACF,IAAD,EAAM;AACd,QAAIG,OAAO,GAAGH,IAAI,CAACI,SAAL,CAAeC,KAAf,CAAqBC,GAArB,CAA0BC,GAAD,IAAS;AAC9C,aAAO,oBAAC,sBAAD;AAAwB,QAAA,IAAI,EAAEA,GAAG,CAACC,IAAlC;AAAwC,QAAA,GAAG,EAAED,GAAG,CAACC,IAAJ,CAASZ,EAAtD;AAA2D,QAAA,gBAAgB,EAAE,KAAKD,gBAAL,CAAsBc,IAAtB,CAA2B,IAA3B,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFa,CAAd;AAGA,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACN;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,OADH,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKX,KAAL,CAAWC,SAAX,KAAyB,IAAzB,GAA8B,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9B,GAAkF,EADrF,CAJF,CADM,CAAR;AAUD;;AAEDiB,EAAAA,YAAY,CAAC;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBZ,IAAAA;AAAjB,GAAD,EAAyB;AACnC,QAAIW,OAAJ,EAAa,OAAO,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACb,QAAIC,KAAJ,EAAW,OAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACX,WAAO,KAAKV,UAAL,CAAgBF,IAAhB,CAAP;AACD;;AAEDa,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,CADF,CADF,EAME;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEhC,cAAd;AAA8B,MAAA,SAAS,EAAE,KAAKa,YAAL,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKgB,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CADH,CADF,CANF,CADF;AAcD;;AAzDwC;;AA4D3C,eAAe/B,UAAU,CAACS,YAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport {withApollo} from \"@apollo/react-hoc\";\nimport {Query} from 'react-apollo';\nimport {Navbar} from 'reactstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./../assets/scss/style.scss\";\n\nimport {ALL_CHARACTERS, FIND_CHARACTER_BY_ID} from \"../queries\";\nimport ErrorComponent from \"./errorComponent\";\nimport LoadingComponent from \"./loadingComponent\";\nimport CharacterItemComponent from \"./characterItemComponent\";\nimport DetailComponent from \"./detailComponent\";\n\nclass AppComponent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.length = 5;\n    this.state = {character: null};\n  }\n\n  getVariables() {\n    return {length: this.length};\n  }\n\n  async getCharacterById(id, client){\n    let character = (await client.query({\n      query: FIND_CHARACTER_BY_ID,\n      variables: {id: id},\n    })).data;\n    this.setState({character: character});\n  };\n\n  renderData(data){\n    let content = data.allPeople.edges.map((obj) => {\n      return <CharacterItemComponent node={obj.node} key={obj.node.id}  getCharacterById={this.getCharacterById.bind(this)} />\n    });\n    return (<section>\n      <div className=\"row\">\n        <div className=\"col-md-3\">\n          {content}\n        </div>\n        <div className=\"col-md-9\">\n          {this.state.character !== null?<DetailComponent character={this.state.character}/>:''}\n        </div>\n      </div>\n    </section>);\n  }\n\n  executeQuery({loading, error, data}) {\n    if (loading) return <LoadingComponent/>;\n    if (error) return <ErrorComponent/>;\n    return this.renderData(data);\n  }\n\n  render() {\n    return (\n      <div>\n        <header>\n          <Navbar className=\"navbar\">\n            <span className=\"navbar-brand\"> Ravn Star Wars Registry</span>\n          </Navbar>\n        </header>\n        <main className=\"container-fluid\">\n          <Query query={ALL_CHARACTERS} variables={this.getVariables()}>\n            {this.executeQuery.bind(this)}\n          </Query>\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default withApollo(AppComponent);"]},"metadata":{},"sourceType":"module"}