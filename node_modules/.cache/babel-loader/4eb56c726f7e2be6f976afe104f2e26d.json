{"ast":null,"code":"var _jsxFileName = \"/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/components/app.js\";\nimport React from \"react\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { Card, CardHeader, CardBody, Navbar } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./../assets/scss/style.scss\";\nimport { ALL_CHARACTERS, FIND_CHARACTER_BY_ID } from \"../queries\"; //import PeopleItem from \"../templates/peopleItem\";\n\nfunction App() {\n  const getAllCharacters = useQuery(ALL_CHARACTERS, {\n    variables: {\n      length: 5\n    }\n  });\n  const character = useQuery(FIND_CHARACTER_BY_ID, {\n    variables: {\n      id: \"cGVvcGxlOjE=\"\n    }\n  });\n  if (getAllCharacters.loading || character.loading) return React.createElement(\"main\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    className: \"navbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"navbar-brand\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \" Ravn Star Wars Registry\")), React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"loading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), \"Loading\")))));\n  if (getAllCharacters.error || character.error) return React.createElement(\"main\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"nav\", {\n    className: \"navbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"navbar-brand\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \" Ravn Star Wars Registry\")), React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \";( Error\")))));\n  let listview = getAllCharacters.data.allPeople.edges.map(obj => {\n    let node = obj.node;\n    return React.createElement(Card, {\n      \"data-key\": node.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, node.name)), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, node.species.name, \" from \", node.homeworld.name)));\n  });\n  return React.createElement(\"main\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"nav\", {\n    className: \"navbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"navbar-brand\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \" Ravn Star Wars Registry\")), React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, listview));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/components/app.js"],"names":["React","useQuery","Card","CardHeader","CardBody","Navbar","ALL_CHARACTERS","FIND_CHARACTER_BY_ID","App","getAllCharacters","variables","length","character","id","loading","error","listview","data","allPeople","edges","map","obj","node","name","species","homeworld"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {useQuery} from '@apollo/react-hooks';\nimport {Card, CardHeader, CardBody, Navbar} from 'reactstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./../assets/scss/style.scss\";\n\nimport {ALL_CHARACTERS, FIND_CHARACTER_BY_ID} from \"../queries\";\n\n//import PeopleItem from \"../templates/peopleItem\";\n\nfunction App() {\n  const getAllCharacters = useQuery(ALL_CHARACTERS, {variables: {length: 5}});\n  const character = useQuery(FIND_CHARACTER_BY_ID, {variables: {id: \"cGVvcGxlOjE=\"}});\n  if (getAllCharacters.loading || character.loading) return (\n    <main className=\"container\">\n      <Navbar className=\"navbar\">\n        <span className=\"navbar-brand\"> Ravn Star Wars Registry</span>\n      </Navbar>\n      <section>\n        <div className=\"row\">\n          <div className=\"col-md-3\">\n            <p className=\"loading\"><i/>Loading</p>\n          </div>\n        </div>\n      </section>\n    </main>);\n  if (getAllCharacters.error || character.error) return (<main className=\"container\">\n    <nav className=\"navbar\">\n      <span className=\"navbar-brand\"> Ravn Star Wars Registry</span>\n    </nav>\n    <section>\n      <div className=\"row\">\n        <div className=\"col-md-3\">\n          <p className=\"error\">;( Error</p>\n        </div>\n      </div>\n    </section>\n  </main>);\n\n  let listview = getAllCharacters.data.allPeople.edges.map((obj) => {\n    let node = obj.node;\n    return (<Card data-key={node.id}>\n      <CardHeader><h2>{node.name}</h2></CardHeader>\n      <CardBody>\n        <p>{node.species.name} from {node.homeworld.name}</p>\n      </CardBody>\n    </Card>)\n  });\n  return (\n    <main className=\"container\">\n      <nav className=\"navbar\">\n        <span className=\"navbar-brand\"> Ravn Star Wars Registry</span>\n      </nav>\n      <section>\n        {listview}\n      </section>\n    </main>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}