{"ast":null,"code":"var _jsxFileName = \"/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/index.js\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { ALL_CHARACTERS, FIND_CHARACTER_BY_ID } from \"./Queries\";\nimport mobiscroll from \"@mobiscroll/react-lite\";\nimport '@mobiscroll/react-lite/dist/css/mobiscroll.min.css';\nimport api from \"./hocs/characters\";\nimport VehicleItem from \"./templates/vehicleItem\";\nimport PeopleItem from \"./templates/peopleItem\";\nimport CharacteristicItem from \"./templates/characteristicItem\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changePerson = (event, inst) => {\n      this.setState({\n        selectedPerson: this.state.data[event.index]\n      });\n    };\n\n    const getAllCharacters = useQuery(ALL_CHARACTERS);\n    const character = useQuery(FIND_CHARACTER_BY_ID, {\n      variables: {\n        id: 1\n      }\n    });\n    if (getAllUsers.loading || userInfo.loading) return React.createElement(Spinner, {\n      color: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n    if (getAllUsers.error || userInfo.error) return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Error :(\");\n    this.state = {\n      characters: api.listCharacters(),\n      selectedCharacter: null,\n      data: []\n    };\n    this.getData();\n  }\n\n  render() {\n    let content = '';\n    const selectedPerson = this.state.selectedPerson;\n\n    if (selectedPerson !== null) {\n      content = React.createElement(\"div\", {\n        className: \"mbsc-form-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(mobiscroll.CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"mbsc-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"General information\")), React.createElement(mobiscroll.CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(mobiscroll.Listview, {\n        itemType: CharacteristicItem,\n        data: this.state.characteristics,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })), React.createElement(mobiscroll.CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"mbsc-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Vehicles\")), React.createElement(mobiscroll.CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(mobiscroll.Listview, {\n        itemType: VehicleItem,\n        data: this.state.vehicles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(mobiscroll.Form, {\n      theme: \"mobiscroll\",\n      className: \"md-master-detail-demo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mbsc-grid mbsc-no-padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mbsc-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mbsc-col-12 mbsc-col-md-2 mbsc-col-sm-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(mobiscroll.Listview, {\n      select: \"single\",\n      itemType: PeopleItem,\n      data: this.state.people,\n      onItemTap: this.changePerson,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"mbsc-col-12 mbsc-col-md-10 mbsc-col-sm-9 md-col-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, content))));\n  }\n\n  getData() {\n    return [];\n  }\n\n}\n\nrender(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/luisbenavides/Sites/listview-master-detail-viewdemo/src/index.js"],"names":["React","render","useQuery","ALL_CHARACTERS","FIND_CHARACTER_BY_ID","mobiscroll","api","VehicleItem","PeopleItem","CharacteristicItem","App","Component","constructor","props","changePerson","event","inst","setState","selectedPerson","state","data","index","getAllCharacters","character","variables","id","getAllUsers","loading","userInfo","error","characters","listCharacters","selectedCharacter","getData","content","characteristics","vehicles","people","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {render} from \"react-dom\";\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { ALL_CHARACTERS, FIND_CHARACTER_BY_ID } from \"./Queries\";\n\nimport mobiscroll from \"@mobiscroll/react-lite\";\nimport '@mobiscroll/react-lite/dist/css/mobiscroll.min.css';\n\nimport api from \"./hocs/characters\";\n\nimport VehicleItem from \"./templates/vehicleItem\";\nimport PeopleItem from \"./templates/peopleItem\";\nimport CharacteristicItem from \"./templates/characteristicItem\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const getAllCharacters = useQuery(ALL_CHARACTERS);\n    const character = useQuery(FIND_CHARACTER_BY_ID, { variables: { id: 1 }});\n    if (getAllUsers.loading || userInfo.loading) return <Spinner color=\"dark\" />;\n    if (getAllUsers.error || userInfo.error) return <React.Fragment>Error :(</React.Fragment>;\n\n    this.state = {\n      characters: api.listCharacters(),\n      selectedCharacter: null,\n      data: []\n    };\n    this.getData();\n  }\n\n  render() {\n    let content = '';\n    const selectedPerson = this.state.selectedPerson;\n\n    if(selectedPerson !== null){\n      content = (<div className=\"mbsc-form-grid\">\n        <mobiscroll.CardHeader>\n          <span className=\"mbsc-bold\">General information</span>\n        </mobiscroll.CardHeader>\n        <mobiscroll.CardContent>\n          <mobiscroll.Listview itemType={CharacteristicItem} data={this.state.characteristics}/>\n        </mobiscroll.CardContent>\n        <mobiscroll.CardHeader>\n          <span className=\"mbsc-bold\">Vehicles</span>\n        </mobiscroll.CardHeader>\n        <mobiscroll.CardContent>\n          <mobiscroll.Listview itemType={VehicleItem} data={this.state.vehicles}/>\n        </mobiscroll.CardContent>\n      </div>);\n    }\n\n    return (\n      <mobiscroll.Form theme=\"mobiscroll\" className=\"md-master-detail-demo\">\n        <div className=\"mbsc-grid mbsc-no-padding\">\n          <div className=\"mbsc-row\">\n            <div className=\"mbsc-col-12 mbsc-col-md-2 mbsc-col-sm-3\">\n              <mobiscroll.Listview select=\"single\" itemType={PeopleItem} data={this.state.people} onItemTap={this.changePerson} />\n            </div>\n            <div className=\"mbsc-col-12 mbsc-col-md-10 mbsc-col-sm-9 md-col-border\">\n              {content}\n            </div>\n          </div>\n        </div>\n      </mobiscroll.Form>\n    );\n  }\n\n  getData() {\n    return [];\n  }\n\n  changePerson = (event, inst) => {\n    this.setState({ selectedPerson: this.state.data[event.index]});\n  }\n}\n\nrender(<App/>, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}